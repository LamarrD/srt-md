1
00:00:00,370 --> 00:00:03,635
Now, let's discuss cross
origin resource sharing.

2
00:00:03,635 --> 00:00:06,607
We've been discussing
the same origin policy,

3
00:00:06,607 --> 00:00:11,750
which means that cross origin reading
and writing is typically not allowed.

4
00:00:11,750 --> 00:00:15,400
Now, what happens when
a website has multiple domains?

5
00:00:15,400 --> 00:00:23,030
For example, Amazon, the company has
both the amazon.com and aws.co websites.

6
00:00:23,030 --> 00:00:25,644
These two domains belong
to the same company, so

7
00:00:25,644 --> 00:00:28,845
we expect that they should be
able to share some resources.

8
00:00:28,845 --> 00:00:32,902
Now of course,
we want the same origin policy, so

9
00:00:32,902 --> 00:00:39,097
that another analytic website cannot
easily access resource from Amazon.

10
00:00:39,097 --> 00:00:44,060
Cross Origin Resource Sharing is
a technique that we can use to relax

11
00:00:44,060 --> 00:00:49,023
the same-origin policy, so
that JavaScript on a web page such as on

12
00:00:49,023 --> 00:00:53,990
amazon.com now can consume
content from different origin.

13
00:00:53,990 --> 00:00:56,153
Let say, aws.com.

14
00:00:56,153 --> 00:00:58,730
It basically uses wireless.

15
00:00:58,730 --> 00:01:03,440
For example, amazon.com can list
the domains that it allowed.

16
00:01:04,489 --> 00:01:07,732
Here's how
Cross Origin Resource Sharing works.

17
00:01:07,732 --> 00:01:13,470
The browser sends the options
request to the origin HTTP header.

18
00:01:13,470 --> 00:01:18,640
The value of this header is the domain
that served the parent page.

19
00:01:18,640 --> 00:01:24,685
For example, when a page from amazon.com
attempts to access a users data

20
00:01:24,685 --> 00:01:30,452
in aws.com, the following request
header will be sent to aws.com.

21
00:01:30,452 --> 00:01:35,634
That is it specifies
origin https://amazon.com.

22
00:01:35,634 --> 00:01:38,335
The server can inspect
the Origin header and

23
00:01:38,335 --> 00:01:42,170
respond whether the access is allowed or
not.

24
00:01:42,170 --> 00:01:45,780
For example,
the server can send back an error page,

25
00:01:45,780 --> 00:01:49,330
if the server does not allowed
the cross origin request or

26
00:01:49,330 --> 00:01:53,390
it can specify which origin
is allowed to access.

27
00:01:53,390 --> 00:01:58,720
For example, in this case, the origin
https://amazon.com is allowed or

28
00:01:58,720 --> 00:02:03,110
it can use a roll call to say
that all domains are allowed.
